cnn_model %>% 
  # embedding layer maps vocab indices into embedding_dims dimensions
  layer_embedding(max_features, embedding_dims, input_length = maxlen) %>%
  # add some dropout
  layer_dropout(0.3) %>%
  # convolutional layer
  layer_conv_1d(
    filters = 100,
    kernel_size = 3, 
    padding = "valid",  # "valid" means no padding, as we did it already
    activation = "relu", 
    strides = 2 ) %>%
    layer_global_max_pooling_1d() %>%
  layer_dense(256) %>%
  layer_activation("relu") %>%
  
  layer_dense(128) %>%
  layer_dropout(0.5) %>%
  layer_activation("relu") %>%
  
  layer_dense(6) %>%   # single unit output layer
  layer_activation("softmax")

Layer (type)                         Output Shape                      Param #      
====================================================================================
embedding_14 (Embedding)             (None, 300, 10)                   20000        
____________________________________________________________________________________
dropout_30 (Dropout)                 (None, 300, 10)                   0            
____________________________________________________________________________________
conv1d_14 (Conv1D)                   (None, 149, 100)                  3100         
____________________________________________________________________________________
global_max_pooling1d_14 (GlobalMaxPo (None, 100)                       0            
____________________________________________________________________________________
dense_40 (Dense)                     (None, 256)                       25856        
____________________________________________________________________________________
activation_40 (Activation)           (None, 256)                       0            
____________________________________________________________________________________
dense_41 (Dense)                     (None, 128)                       32896        
____________________________________________________________________________________
dropout_31 (Dropout)                 (None, 128)                       0            
____________________________________________________________________________________
activation_41 (Activation)           (None, 128)                       0            
____________________________________________________________________________________
dense_42 (Dense)                     (None, 6)                         774          
____________________________________________________________________________________
activation_42 (Activation)           (None, 6)                         0            
====================================================================================
Total params: 82,626
Trainable params: 82,626
Non-trainable params: 0
____________________________________________________________________________________

cnn_model %>% compile(
  loss = "categorical_crossentropy",
  optimizer = "rmsprop",
  metrics = "accuracy"
)

cnn_history <- cnn_model %>%
  fit(
    x_train, train$y,
    batch_size = 400,
    epochs = 10,
    validation_data = list(x_test, test$y)
  )

1464/1464 [==============================] - 0s 84us/step
$`loss`
[1] 1.177343

$acc
[1] 0.5484973
